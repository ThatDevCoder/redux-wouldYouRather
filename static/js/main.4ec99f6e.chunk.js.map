{"version":3,"sources":["assets/images/react-logo.svg","assets/images/redux-logo.svg","utils/_DATA.js","utils/api.js","actions/questions.js","actions/users.js","utils/constants.js","actions/common.js","components/Button.js","pages/Login.js","actions/authUser.js","utils/helpers.js","components/QuestionCard.js","components/NavBar.js","pages/Home.js","components/UserCard.js","pages/LeaderBoard.js","pages/NewQuestion.js","components/PercentBar.js","pages/QuestionDetails.js","pages/NotFound.js","App.js","serviceWorker.js","reducers/index.js","reducers/authUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["module","exports","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionVote","data","qid","answer","_saveQuestionAnswer","handleSaveQuestion","payload","cb","dispatch","getState","showLoading","authUser","then","user","questionId","hideLoading","type","addQuestion","handleInitialData","all","receiveUsers","receiveQuestions","Button","onClick","size","isDisabled","className","disabled","withRouter","connect","loadingBar","userOptions","Object","keys","sort","a","b","localeCompare","map","value","label","props","useState","selectedUser","setSelectedUser","handleRedirect","history","location","state","pathname","from","push","src","reactLogo","alt","reduxLogo","default","options","onChange","placeholder","event","preventDefault","helpers","avatar","optionOneVotes","optionTwoVotes","questionAnswered","includes","questionNotAnswered","calcPercentage","count","total","countInt","parseInt","totalInt","round","width","to","userData","exact","sortedQuestions","unansweredQuestionsId","filter","key","answeredQuestionsId","activeTab","setActiveTab","onTabClick","index","isTabActive","length","LeaderBoard","this","usersId","Component","calcScore","sortUsers","formValues","setFormValues","onTextChange","e","target","required","isFormDisabled","PercentBar","progress","style","match","params","question_id","answered","totalUsers","vote","setVote","setActiveClass","option","updateQuestionVote","updateUserAnswers","handleSaveQuestionVote","NotFound","App","PrivateRoute","children","rest","render","path","Boolean","window","hostname","combineReducers","loadingBarReducer","action","logger","store","next","console","group","log","result","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ec99f6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux-logo.fe29b862.svg\";","let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: 'https://avatars2.githubusercontent.com/u/9349859?s=400',\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","import {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer\r\n} from './_DATA';\r\n\r\nexport function getInitialData () {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getQuestions(),\r\n  ])\r\n  .then(([users, questions]) => {\r\n    return {\r\n      users,\r\n      questions,\r\n    }\r\n  })\r\n}\r\n\r\nexport function saveQuestion (question) {\r\n  return _saveQuestion(question)\r\n}\r\n\r\nexport function saveQuestionVote (data) {\r\n  return _saveQuestionAnswer(data)\r\n}\r\n","import { RECEIVE_QUESTIONS, ADD_QUESTION, UPDATE_QUESTION_VOTE } from \"../utils/constants\";\r\nimport { saveQuestion, saveQuestionVote } from \"../utils/api\";\r\nimport { updateUserQuestions, updateUserAnswers } from \"./users\";\r\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\r\n\r\nfunction addQuestion (question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question,\r\n  }\r\n}\r\n\r\nfunction updateQuestionVote (authUser, qid, vote) {\r\n  return {\r\n    type: UPDATE_QUESTION_VOTE,\r\n    authUser,\r\n    qid,\r\n    vote,\r\n  }\r\n}\r\n\r\nexport function receiveQuestions (questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  }\r\n}\r\n\r\nexport function handleSaveQuestion (payload, cb) {\r\n  return (dispatch, getState) => {\r\n    dispatch(showLoading())\r\n    const { authUser } = getState();\r\n\r\n    return saveQuestion({\r\n      ...payload,\r\n      author: authUser,\r\n    })\r\n    .then((question) => {\r\n      dispatch(hideLoading())\r\n      dispatch(addQuestion(question))\r\n      dispatch(updateUserQuestions(authUser, question.id))\r\n      cb()\r\n    })\r\n  }\r\n}\r\n\r\nexport function handleSaveQuestionVote (qid, vote) {\r\n  return (dispatch, getState) => {\r\n    dispatch(showLoading())\r\n    const { authUser } = getState();\r\n\r\n    return saveQuestionVote({\r\n      authedUser: authUser,\r\n      qid: qid,\r\n      answer: vote,\r\n    })\r\n    .then(() => {\r\n      dispatch(hideLoading())\r\n      dispatch(updateQuestionVote(authUser, qid, vote))\r\n      dispatch(updateUserAnswers(authUser, qid, vote))\r\n    })\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_USERS,\r\n  UPDATE_USER_QUESTIONS,\r\n  UPDATE_USER_ANSWERS\r\n} from \"../utils/constants\";\r\n\r\nexport function receiveUsers (users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  }\r\n}\r\n\r\nexport function updateUserQuestions (user, questionId) {\r\n  return {\r\n    type: UPDATE_USER_QUESTIONS,\r\n    user,\r\n    questionId,\r\n  }\r\n}\r\n\r\nexport function updateUserAnswers (user, questionId, vote) {\r\n  return {\r\n    type: UPDATE_USER_ANSWERS,\r\n    user,\r\n    questionId,\r\n    vote,\r\n  }\r\n}\r\n","export const RECEIVE_USERS = 'RECEIVE_USERS';\r\nexport const UPDATE_USER_QUESTIONS = 'UPDATE_USER_QUESTIONS';\r\nexport const UPDATE_USER_ANSWERS = 'UPDATE_USER_ANSWERS';\r\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\r\nexport const LOGOUT_AUTH_USER = 'LOGOUT_AUTH_USER';\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const VOTE_QUESTION = 'VOTE_QUESTION';\r\nexport const UPDATE_QUESTION_VOTE = 'UPDATE_QUESTION_VOTE';","import { showLoading, hideLoading } from 'react-redux-loading-bar';\r\nimport { getInitialData } from '../utils/api';\r\nimport { receiveUsers } from './users';\r\nimport { receiveQuestions } from './questions';\r\n\r\nexport function handleInitialData () {\r\n  return (dispatch) => {\r\n    dispatch(showLoading())\r\n\r\n    return getInitialData()\r\n      .then(({ users, questions }) => {\r\n        dispatch(hideLoading())\r\n\r\n        dispatch(receiveUsers(users))\r\n        dispatch(receiveQuestions(questions))\r\n      })\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Button = ({ id, text, onClick, type, size, isDisabled }) => {\r\n  return (\r\n    <button\r\n      id={id}\r\n      onClick={onClick}\r\n      className={`btn ${type} ${size}`}\r\n      disabled={isDisabled || false}>\r\n      { text }\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthUser } from '../actions/authUser';\r\nimport { withRouter } from 'react-router-dom';\r\nimport reactLogo from '../assets/images/react-logo.svg';\r\nimport reduxLogo from '../assets/images/redux-logo.svg';\r\nimport Select from 'react-select';\r\nimport Button from '../components/Button';\r\n\r\nconst Login = (props) => {\r\n  const { userOptions, loadingBar } = props;\r\n  const [selectedUser, setSelectedUser] = useState(null)\r\n\r\n  const btnDisabled = () => {\r\n    return selectedUser === null\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    const { dispatch, history, location } = props\r\n\r\n    event.preventDefault()\r\n\r\n    dispatch(setAuthUser(selectedUser.value));\r\n    handleRedirect(history, location)\r\n  }\r\n\r\n  const handleRedirect = (history, location) => {\r\n    if (location.state) {\r\n      const { pathname } = location.state.from;\r\n      history.push(pathname)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper login\">\r\n      <div className=\"logo\">\r\n        <p>Would</p>\r\n        <p>You</p>\r\n        <p>Rather?</p>\r\n      </div>\r\n      <div className=\"logo-subtext\">\r\n        React Nanodegree Project\r\n      </div>\r\n\r\n      <div className=\"intro-images\">\r\n        <div className=\"intro-img\">\r\n          <img src={reactLogo} alt=\"React\" />\r\n        </div>\r\n        <div className=\"intro-img redux\">\r\n          <img src={reduxLogo} alt=\"Redux\" />\r\n        </div>\r\n      </div>\r\n\r\n      { loadingBar.default > 0 ? (\r\n        <div>Loading users...</div>\r\n      ): (\r\n        <div>\r\n          Please login to continue\r\n\r\n          <form>\r\n            <Select\r\n              id=\"user-select\"\r\n              className=\"user-select\"\r\n              value={selectedUser}\r\n              options={userOptions}\r\n              onChange={setSelectedUser}\r\n              placeholder=\"Select User...\"\r\n            />\r\n\r\n            <Button\r\n              text=\"Log in\"\r\n              type=\"primary\"\r\n              onClick={handleLogin}\r\n              isDisabled={btnDisabled()}\r\n            />\r\n          </form>\r\n        </div>\r\n      ) }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ users, loadingBar }) => {\r\n  const filterAlpha = Object.keys(users).sort((a, b) => a.localeCompare(b))\r\n\r\n  return {\r\n    loadingBar,\r\n    userOptions: filterAlpha.map(id => (\r\n      {value: id, label: users[id].name}\r\n    )),\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login));\r\n","import { SET_AUTH_USER, LOGOUT_AUTH_USER } from \"../utils/constants\";\r\n\r\nexport function setAuthUser (id) {\r\n  return {\r\n    type: SET_AUTH_USER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport function logoutUser () {\r\n  return {\r\n    type: LOGOUT_AUTH_USER\r\n  }\r\n}\r\n","const helpers = {\r\n  formatQuestion: (question, users) => {\r\n    const { id, author, optionOne, optionTwo, timestamp } = question;\r\n    const { name, avatarURL } = users[author];\r\n  \r\n    return {\r\n      id,\r\n      name,\r\n      timestamp,\r\n      avatar: avatarURL,\r\n      optionOneText: optionOne.text,\r\n      optionOneVotes: optionOne.votes,\r\n      optionTwoText: optionTwo.text,\r\n      optionTwoVotes: optionTwo.votes,\r\n    }\r\n  },\r\n\r\n  questionAnswered: (question, user) => {\r\n    return question.optionOne.votes.includes(user) || question.optionTwo.votes.includes(user)\r\n  },\r\n\r\n  questionNotAnswered: (question, user) => {\r\n    return !question.optionOne.votes.includes(user) && !question.optionTwo.votes.includes(user)\r\n  },\r\n\r\n  calcPercentage: (count, total) => {\r\n    const countInt = parseInt(count);\r\n    const totalInt = parseInt(total);\r\n\r\n    return Math.round((countInt / totalInt) * 100);\r\n  },\r\n}\r\n\r\nexport default helpers;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport helpers from '../utils/helpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QuestionCard = ({ question }) => {\r\n  if (question === null) {\r\n    return (\r\n      <div>This question does not exist.</div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-card\">\r\n      <div className=\"user\">\r\n        <div className=\"image\">\r\n          <img src={question.avatar} alt={`${question.name} avatar`} width={100} />\r\n        </div>\r\n\r\n        <div>\r\n          <h4 className=\"name\">\r\n            { question.name }\r\n          </h4>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"summary\">\r\n        <h4>Would you rather...</h4>\r\n        <p>{question.optionOneText}</p>\r\n        <p>or</p>\r\n        <p>...</p>\r\n\r\n        <Link to={`questions/${question.id}`} className=\"link\">\r\n          View Poll\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ questions, users }, { id }) => {\r\n  return {\r\n    id,\r\n    question: helpers.formatQuestion(questions[id], users),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionCard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logoutUser } from '../actions/authUser';\r\nimport Button from './Button';\r\n\r\nconst NavBar = ({ userData, dispatch }) => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"nav-logo\">\r\n        <p>Would</p>\r\n        <p>You</p>\r\n        <p>Rather?</p>\r\n      </div>\r\n\r\n      <div className=\"links\">\r\n        <ul>\r\n          <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/leaderboard\">Leader Board</NavLink></li>\r\n          <li><NavLink to=\"/add\">New Question</NavLink></li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"auth-user\">\r\n        <div>Hi, {userData.name}</div>\r\n        <div><img src={userData.avatarURL} alt={`${userData.avatarURL} avatar`} width={40} /></div>\r\n\r\n        <div>\r\n          <Button\r\n            id=\"logout-btn\"\r\n            size=\"sm\"\r\n            text=\"Log Out\"\r\n            onClick={() => dispatch(logoutUser())}\r\n          />\r\n        </div>\r\n      </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ authUser, users }) => {\r\n  return {\r\n    userData: users[authUser]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from '../components/QuestionCard';\r\nimport helpers from '../utils/helpers';\r\nimport NavBar from '../components/NavBar';\r\n\r\nconst Home = ({ unansweredQuestionsId, answeredQuestionsId }) => {\r\n  const [activeTab, setActiveTab] = useState(0)\r\n\r\n  const onTabClick = (index) => {\r\n    setActiveTab(index)\r\n  }\r\n\r\n  const isTabActive = (index) => {\r\n    return activeTab === index ? 'tab active' : 'tab'\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"wrapper home\">\r\n      <div className=\"home-nav\">\r\n        <div className={isTabActive(0)} onClick={() => onTabClick(0)}>\r\n          Unanswered Questions\r\n          <span className=\"pill\">{unansweredQuestionsId.length}</span>\r\n        </div>\r\n\r\n        <div className={isTabActive(1)} onClick={() => onTabClick(1)}>\r\n          Answered Questions\r\n          <span className=\"pill\">{answeredQuestionsId.length}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"home-content\">\r\n        { activeTab === 0 && (\r\n          unansweredQuestionsId.length > 0 ? (\r\n            unansweredQuestionsId.map(id => (\r\n              <QuestionCard key={id} id={id} />\r\n            ))\r\n          ) : (\r\n            <div className=\"wrapper-status\">\r\n              You're all caught up! No unanswered questions.\r\n            </div>\r\n          )\r\n        ) }\r\n\r\n        { activeTab === 1 && (\r\n          answeredQuestionsId.length > 0 ? (\r\n            answeredQuestionsId.map(id => (\r\n              <QuestionCard key={id} id={id} />\r\n            ))\r\n          ) : (\r\n            <div className=\"wrapper-status\">\r\n              No answered questions. Get into the game by voting!\r\n            </div>\r\n          )\r\n        ) }\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ authUser, questions }) => {\r\n  const sortedQuestions = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\r\n\r\n  return {\r\n    unansweredQuestionsId: sortedQuestions\r\n      .filter(key => helpers.questionNotAnswered(questions[key], authUser)),\r\n\r\n    answeredQuestionsId: sortedQuestions\r\n      .filter(key => helpers.questionAnswered(questions[key], authUser)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst UserCard = ({ user}) => {\r\n  const total = (user) => {\r\n    return user.questions.length + Object.keys(user.answers).length\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-card\">\r\n      <div className=\"user\">\r\n      <div>\r\n          <h2 className=\"name\">\r\n            { user.name }\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"image\">\r\n          <img src={user.avatarURL} alt={`${user.name} avatar`} width={100} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"summary\">\r\n        <p>Asked Questions: {user.questions.length}</p>\r\n        <p>Answered Questions: {Object.keys(user.answers).length}</p>\r\n\r\n        <p className=\"score\">SCORE: <br /> <span>{total(user)}</span></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ users }, { id }) => {\r\n  return {\r\n    id,\r\n    user: users[id],\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserCard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserCard from '../components/UserCard';\r\nimport NavBar from '../components/NavBar';\r\n\r\nclass LeaderBoard extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <NavBar />\r\n\r\n      <div className=\"wrapper leader-board\">\r\n        <h2>Leader Board</h2>\r\n\r\n        {this.props.usersId.map(id => (\r\n          <UserCard key={id} id={id} />\r\n        ))}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst calcScore = (users, id) => {\r\n  return users[id].questions.length + Object.keys(users[id].answers).length\r\n}\r\n\r\nconst sortUsers = (users) => {\r\n  const keys = Object.keys(users)\r\n\r\n  return keys.sort((a, b) => {\r\n    return calcScore(users, b) - calcScore(users, a)\r\n  })\r\n}\r\n\r\nconst mapStateToProps = ({ users }) => {\r\n  return {\r\n    usersId: sortUsers(users)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleSaveQuestion } from '../actions/questions';\r\nimport NavBar from '../components/NavBar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\n\r\nconst NewQuestion = (props) => {\r\n  const [formValues, setFormValues] = useState({\r\n    optionOneText: '',\r\n    optionTwoText: '',\r\n  });\r\n\r\n  const onTextChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name\r\n\r\n    setFormValues(state => ({...state, [name]: value}))\r\n  };\r\n\r\n  const onSaveQuestion =  (event) => {\r\n    const { dispatch, history } = props;\r\n    event.preventDefault()\r\n    dispatch(handleSaveQuestion(formValues, () => history.push('/')))\r\n  };\r\n\r\n  const isFormDisabled = () => {\r\n    const { loadingBar } = props;\r\n    return !formValues.optionOneText || !formValues.optionTwoText || loadingBar.default === 1;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"wrapper new-question\">\r\n      <h2>New Polling Question</h2>\r\n\r\n      <form className=\"question-form\">\r\n        <p>Complete the question:</p>\r\n\r\n        <h4>Would you rather...</h4>\r\n\r\n        <div>\r\n          <input\r\n            id=\"optionOne\"\r\n            type=\"text\"\r\n            name=\"optionOneText\"\r\n            value={formValues.optionOneText}\r\n            onChange={onTextChange}\r\n            placeholder=\"Option One...\"\r\n            className=\"text-input\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"or\">\r\n          <p>OR</p>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            id=\"optionTwo\"\r\n            type=\"text\"\r\n            name=\"optionTwoText\"\r\n            value={formValues.optionTwoText}\r\n            onChange={onTextChange}\r\n            placeholder=\"Option Two...\"\r\n            className=\"text-input\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cta\">\r\n          <Button\r\n            text=\"Save\"\r\n            id=\"save-poll\"\r\n            type=\"primary\"\r\n            onClick={onSaveQuestion}\r\n            isDisabled={isFormDisabled()}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ loadingBar }) => {\r\n  return {\r\n    loadingBar,\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(NewQuestion));\r\n","import React from 'react';\r\n\r\nconst PercentBar = ({ progress }) => {\r\n  return (\r\n    <div className=\"percent-bar\">\r\n      <div className=\"progress\" style={{width: `${progress}%`}}>\r\n        {progress}%\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PercentBar;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport helpers from '../utils/helpers';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { handleSaveQuestionVote } from '../actions/questions';\r\nimport NavBar from '../components/NavBar';\r\nimport Button from '../components/Button';\r\nimport PercentBar from '../components/PercentBar';\r\n\r\nconst QuestionDetails = (props) => {\r\n  const {\r\n    authUser,\r\n    question,\r\n    answered,\r\n    dispatch,\r\n    totalUsers,\r\n    loadingBar,\r\n  } = props;\r\n\r\n  const [vote, setVote] = useState('');\r\n\r\n  const handleSubmitVote = (e) => {\r\n    e.preventDefault()\r\n    dispatch(handleSaveQuestionVote(question.id, vote))\r\n    setVote('')\r\n  }\r\n\r\n  const setActiveClass = (option) => {\r\n    return vote === option ? 'option active' : 'option'\r\n  }\r\n\r\n  const isBtnDisabled = () => {\r\n    return !vote || loadingBar.default === 1\r\n  }\r\n\r\n  if (question === null) {\r\n    return (\r\n      <>\r\n      <NavBar />\r\n      <div className=\"wrapper\">\r\n        <h2>Not Found</h2>\r\n\r\n        <div className=\"wrapper-status\">\r\n          Poll does not exist\r\n        </div>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n\r\n    <div className=\"wrapper question-details\">\r\n      <h5>{question.name} { answered ? 'asked:' : 'asks...' }</h5>\r\n\r\n      <div className=\"body\">\r\n        <div className=\"user\">\r\n          <img src={question.avatar} alt={`${question.avatar} avatar`} width={100} />\r\n        </div>\r\n\r\n        <div className=\"questions\">\r\n          { answered ? (\r\n            <>\r\n              <h3>Poll Results</h3>\r\n\r\n              <div className={`answer ${question.optionOneVotes.includes(authUser) ? 'selected' : ''}`}>\r\n                <p>{question.optionOneText}</p>\r\n\r\n                <PercentBar\r\n                  progress={helpers.calcPercentage(question.optionOneVotes.length, totalUsers)}\r\n                />\r\n                <p>{question.optionOneVotes.length} out of {totalUsers} votes</p>\r\n              </div>\r\n\r\n              <div className={`answer ${question.optionTwoVotes.includes(authUser) ? 'selected' : ''}`}>\r\n                <p>{question.optionTwoText}</p>\r\n\r\n                <PercentBar\r\n                  progress={helpers.calcPercentage(question.optionTwoVotes.length, totalUsers)}\r\n                />\r\n                <p>{question.optionTwoVotes.length} out of {totalUsers} votes</p>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3>Would you rather?</h3>\r\n\r\n              <div className=\"options\">\r\n                <div className={setActiveClass('optionOne')} onClick={() => setVote('optionOne')}>\r\n                  {question.optionOneText}\r\n                </div>\r\n\r\n                <div className={setActiveClass('optionTwo')} onClick={() => setVote('optionTwo')}>\r\n                  {question.optionTwoText}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) }\r\n\r\n          { answered || (\r\n            <div className=\"cta\">\r\n              <Button\r\n                id=\"vote-btn\"\r\n                text=\"Vote Now\"\r\n                type=\"primary\"\r\n                onClick={handleSubmitVote}\r\n                isDisabled={isBtnDisabled()}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ authUser, questions, users, loadingBar }, { match }) => {\r\n  const { question_id } = match.params;\r\n  const question = questions[question_id]\r\n\r\n  return {\r\n    authUser,\r\n    loadingBar,\r\n    question: question ? helpers.formatQuestion(question, users) : null,\r\n    answered: question ? helpers.questionAnswered(question, authUser) : false,\r\n    totalUsers: Object.keys(users).length,\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionDetails));\r\n","import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"wrapper\">\r\n      <h2>404 - Not Found</h2>\r\n\r\n      <div className=\"wrapper-status\">\r\n        The page you seek cannot be found :(\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { handleInitialData } from './actions/common';\r\nimport LoadingBar from 'react-redux-loading-bar';\r\n\r\n// pages\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport LeaderBoard from './pages/LeaderBoard';\r\nimport NewQuestion from './pages/NewQuestion';\r\nimport QuestionDetails from './pages/QuestionDetails';\r\nimport NotFound from './pages/NotFound';\r\n\r\nclass App extends Component {\r\n  componentDidMount () {\r\n    const { authUser, dispatch } = this.props;\r\n\r\n    if (authUser === null) {\r\n      dispatch(handleInitialData())\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { authUser } = this.props;\r\n\r\n    const PrivateRoute = ({ children, ...rest }) => {\r\n      return (\r\n        <Route {...rest} render={({ location }) =>\r\n            authUser ? (\r\n              children\r\n            ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: location }\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n        <>\r\n        <LoadingBar className=\"loading-bar\" />\r\n\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n\r\n            <PrivateRoute exact path=\"/\">\r\n              <Home />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/add\">\r\n              <NewQuestion />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/questions/:question_id\">\r\n              <QuestionDetails />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/leaderboard\">\r\n              <LeaderBoard />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"*\">\r\n              <NotFound />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </div>\r\n        </>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  return {\r\n    authUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { loadingBarReducer } from 'react-redux-loading-bar'\r\nimport users from './users';\r\nimport authUser from './authUser';\r\nimport questions from './questions';\r\n\r\nexport default combineReducers({\r\n  loadingBar: loadingBarReducer,\r\n  authUser,\r\n  users,\r\n  questions,\r\n})\r\n","import { SET_AUTH_USER, LOGOUT_AUTH_USER } from \"../utils/constants\";\r\n\r\nexport default function authUser (state = null, action) {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER:\r\n      return action.id\r\n    case LOGOUT_AUTH_USER:\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_USERS,\r\n  UPDATE_USER_QUESTIONS,\r\n  UPDATE_USER_ANSWERS\r\n} from \"../utils/constants\";\r\n\r\nexport default function users (state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users,\r\n      }\r\n    case UPDATE_USER_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        [action.user]: {\r\n          ...state[action.user],\r\n          questions: state[action.user].questions.concat([action.questionId])\r\n        }\r\n      }\r\n    case UPDATE_USER_ANSWERS:\r\n      return {\r\n        ...state,\r\n        [action.user]: {\r\n          ...state[action.user],\r\n          answers: {\r\n            ...state[action.user].answers,\r\n            [action.questionId]: action.vote\r\n          }\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { RECEIVE_QUESTIONS, ADD_QUESTION, UPDATE_QUESTION_VOTE } from '../utils/constants';\r\n\r\nexport default function question (state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      }\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.question.id]: action.question,\r\n      }\r\n    case UPDATE_QUESTION_VOTE:\r\n      return {\r\n        ...state,\r\n        [action.qid]: {\r\n          ...state[action.qid],\r\n          [action.vote]: {\r\n            ...state[action.qid][action.vote],\r\n            votes: state[action.qid][action.vote].votes.concat(action.authUser)\r\n          }\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type)\r\n  \r\n  console.log(\"The action is: \", action)\r\n  const result = next(action)\r\n  console.log(\"The new state is: \", store.getState())\r\n\r\n  console.groupEnd()\r\n\r\n  return result\r\n}\r\n\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport logger from \"./logger\";\r\n\r\nexport default applyMiddleware(\r\n  thunk,\r\n  logger,\r\n)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\nimport middleware from './middleware';\r\n\r\nconst store = createStore(reducers, middleware)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}